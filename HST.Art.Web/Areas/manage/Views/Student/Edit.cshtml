@{
    Layout = null;
}

@using HST.Art.Web
@using HST.Art.Core
@using HST.Utillity
@model  StuViewModel

@Scripts.Render("~/bundles/saos")
@Scripts.Render("~/bundles/ajaxAsync")
@Scripts.Render("~/bundles/validate")
@Styles.Render("~/appcss")
<style type="text/css">
    .form-horizontal .form-label {
        text-align: right;
    }
</style>
<article class="page-container">
    @using (Ajax.BeginForm("Edit", "Student", new { }, new AjaxOptions() { HttpMethod = "Post", OnSuccess = "formSuccess(data)", OnBegin = "disSubmit('sub_btn')", OnComplete = "enSubmit('sub_btn')" }, new { id = "", @class = "form form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        <div class="row cl">
            <label class="form-label col-xs-3 "><span class="c-red">*</span>证书类别：</label>
            <div class="formControls col-xs-6 ">
                <div class="radio-list">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Category, CertificateType.Prize, new { id = "" })获奖证书
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Category, CertificateType.Train, new { id = "" })学员认证
                    </label>
                </div>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-xs-3 "><span class="c-red">*</span>证书编号：</label>
            <div class="formControls col-xs-6 ">
                @Html.TextBoxFor(m => m.Number, new { placeholder = "请输入证书编号", @class = "input-text" })
                @Html.ValidationMessageFor(m => m.Number, null, new { @class = "error-lable" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-xs-3 "><span class="c-red">*</span>学员姓名：</label>
            <div class="formControls col-xs-6 ">
                @Html.TextBoxFor(m => m.StudentName, new { placeholder = "请输入学员姓名", @class = "input-text" })
                @Html.ValidationMessageFor(m => m.StudentName, null, new { @class = "error-lable" })
            </div>
        </div>

        <div class="row cl">
            <label class="form-label col-xs-3 "><span class="c-red">*</span>性别：</label>
            <div class="formControls col-xs-6 ">
                <div class="radio-list">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Gender, Gender.Female, new { id = "" })女
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Gender, Gender.Male, new { id = "" })男
                    </label>
                </div>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-xs-3 "><span class="c-red">*</span>所在地区：</label>
            <div class="formControls col-xs-6 ">
                @Html.HiddenFor(g=>g.Province)
                <select  class="select select-box inline" disabled style="width:45%;background:#eee">
                    @foreach (KeyValuePair<int, string> item in ViewBag.AreaProvince)
                     {
                        <option value="@item.Key" @(Model.Province == item.Key ? "selected" : "")>@item.Value</option>
                    }
                </select>
                <select name="City" class="select select-box  inline float-right" style="width:50%">
                    @foreach (KeyValuePair<int, string> item in ViewBag.AreaCity)
                {
                        <option value="@item.Key" @(Model.City == item.Key ? "selected" : "")>@item.Value</option>
                    }
                </select>

            </div>
        </div>
        
        <div class="row cl">
            <label class="form-label col-xs-3 ">状态：</label>
            <div class="formControls col-xs-6 ">
                <select class="select select-box" name="State">
                    <option value="@((int)PublishState.Lower)" @(Model.State == (int)PublishState.Lower ? "selected" : "")>下架</option>
                    <option value="@((int)PublishState.Upper)" @(Model.State == (int)PublishState.Upper ? "selected" : "")>上架</option>
                </select>
            </div>
        </div>
        <div class="row cl">
            <div id="btn_submit" class="col-xs-6  col-xs-offset-3 col-sm-offset-2 mt-10">

                <button class="btn btn-primary radius" type="submit" id="sub_btn">保存</button>
                <input name="" type="button" onclick="layer_close();" class="btn btn-default radius " value="取消">
            </div>
        </div>
    }
</article>

<script type="text/javascript">
    function formSuccess(result) {
        if (result != null) {
            if (result.isSuccess) {
                var index = parent.layer.getFrameIndex(window.name);
                layer.alert('保存成功！', {
                    icon: 6,
                    closeBtn: 0,
                    yes: function () {
                        if (parent[1] != null) {
                            parent[pageIndex()].table1.ajax.reload();
                        } else {
                            parent.table1.ajax.reload();
                        }
                        parent.layer.close(index);
                    }
                });
            } else
                layer.alert('保存失败！', { icon: 5 });//icon:6为开心图
        } else
            layer.alert('保存失败！', { icon: 5 });//icon:6为开心图
    }
</script>