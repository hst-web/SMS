@{
    Layout = null;
}

@using HST.Art.Web
@using HST.Art.Core
@using HST.Utillity
@model  ArticleViewModel

@Scripts.Render("~/bundles/saos")
@Scripts.Render("~/bundles/ajaxAsync")
@Scripts.Render("~/bundles/validate")
@Styles.Render("~/appcss")
<script src="~/Content/lib/webuploader/0.1.5/webuploader.min.js" type="text/javascript"></script>
<script type="text/javascript" src="~/Content/lib/ckeditor/ckeditor.js"></script>
<style type="text/css">
    .form-horizontal .form-label {
        text-align: right;
    }
</style>
<nav class="breadcrumb"><i class="Hui-iconfont">&#xe67f;</i> 首页 <span class="c-gray en">&gt;</span>@Html.ActionLink("文章管理", "List") <span class="c-gray en">&gt;</span><a href="javascript:void(0)" onclick="location.reload()">编辑文章</a> </nav>
<article class="page-container">
    @using (Ajax.BeginForm("Edit", "Article", new { }, new AjaxOptions() { HttpMethod = "Post", OnSuccess = "formSuccess(data)", OnBegin = "disSubmit('sub_btn')", OnComplete = "enSubmit('sub_btn')" }, new { id = "", @class = "form form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        <div class="row cl">
            <label class="form-label col-sm-2 "><span class="c-red">*</span>文章头图：</label>
            <div class="formControls col-sm-6 ">
                <div class="form-group" @(string.IsNullOrEmpty(Model.HeadImg) ? "" : "style=position:relative")>
                    <div id="upfileImg" class="up-img-left @(string.IsNullOrEmpty(Model.HeadImg) ?"":"up-imgBtn")">
                        @(string.IsNullOrEmpty(Model.HeadImg) ? "上传图片" : "更改图片")
                    </div>
                    <span class="help-block help-tip help-img @(string.IsNullOrEmpty(Model.HeadImg) ?"":"hidden")" style="top:8px;position:absolute">请上传jpg、jpeg、gif、bmp、png等图片类型的文件</span>
                    <div class="formControls">
                        <ul id="imglist" class="">
                            <li>
                                @if (!string.IsNullOrEmpty(Model.SmallHeadImg))
                                {
                                    <img src="@Model.SmallHeadImg" style="max-width:125px" onerror='nofind()' />
                                }
                            </li>
                        </ul>
                        <input type="hidden" id="loc_temp_img" />
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.HeadImg, null, new { @class = "error-lable" })
                @Html.TextBoxFor(m => m.HeadImg, new { id = "memberFileImg", @class = "hide-area input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-sm-2 "><span class="c-red">*</span>所属模块：</label>
            <div class="formControls col-sm-3 ">
                <select class="select select-box" name="Section" id="sel_section" onchange="bindData()">
                    <option value="@((int)SectionType.Industry)" @(Model.Section == SectionType.Industry ? "selected" : "")>@SectionType.Industry.GetDescription()</option>
                    <option value="@((int)SectionType.Association)" @(Model.Section == SectionType.Association ? "selected" : "")>@SectionType.Association.GetDescription()</option>
                    <option value="@((int)SectionType.Examination)" @(Model.Section == SectionType.Examination ? "selected" : "")>@SectionType.Examination.GetDescription()</option>
                    <option value="@((int)SectionType.Social)" @(Model.Section == SectionType.Social ? "selected" : "")>@SectionType.Social.GetDescription()</option>
                </select>
            </div>
            <label class="form-label col-sm-1 "><span class="c-red">*</span>所属类别：</label>
            <div class="formControls col-sm-4 ">
                <select class="select select-box inline @(Model.Section==SectionType.Examination?"":"hidden")" style="width:47%;" id="sel_parCategory">
                    <option value="0">所属大类</option>
                    @foreach (CategoryDictionary item in ViewBag.ParentCategory)
                    {
                        <option value="@item.Id" @(Model.ParCategory == item.Id ? "selected" : "")>@item.Name</option>
                    }
                </select>
                <select class="select select-box  inline float-right @(Model.Section==SectionType.Examination?"":"hidden")" style="width:48%" id="sel_exCategory">
                    <option value="">所属类别</option>
                    @foreach (CategoryDictionary item in ViewBag.ExCategorys)
                    {
                        <option value="@item.Id" @(Model.Category == item.Id ? "selected" : "")>@item.Name</option>
                    }
                </select>
                <select class="select select-box @(Model.Section==SectionType.Examination?"hidden":"")" id="sel_category">
                    <option value="">所属类别</option>
                    @foreach (CategoryDictionary item in ViewBag.Categorys)
                    {
                        <option value="@item.Id" @(Model.Category == item.Id ? "selected" : "")>@item.Name</option>
                    }
                </select>
                @Html.HiddenFor(g => g.ParCategory, new { @Value = 0 })
                @Html.ValidationMessageFor(m => m.Category, null, new { @class = "error-lable" })
                @Html.TextBoxFor(m => m.Category, new { id = "Category", @class = "hide-area input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-sm-2 "><span class="c-red">*</span>文章标题：</label>
            <div class="formControls col-sm-8 ">
                @Html.TextBoxFor(m => m.Title, new { placeholder = "请输入文章标题", @class = "input-text" })
                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "error-lable" })
            </div>
        </div>

        <div class="row cl">
            <label class="form-label col-sm-2 ">文章详情：</label>
            <div class="formControls col-sm-8 ">
                @Html.TextAreaFor(m => m.Description, new { @class = "ckeditor textarea", rows = "10", placeholder = "请输入文章详情..." })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-xs-2 ">状态：</label>
            <div class="formControls col-xs-6 ">
                <div class="radio-list">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.State, (int)PublishState.Upper, new { id = "" })上架
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.State, (int)PublishState.Lower, new { id = "" })下架
                    </label>
                </div>
            </div>
        </div>
        <div class="row cl">
            <div id="btn_submit" class="col-xs-6  col-xs-offset-3 col-sm-offset-2 mt-10">
                <button class="btn btn-primary radius" type="submit" id="sub_btn">保存</button>
                @Html.ActionLink("取消", "List", null, new { @class = "btn btn-default radius" })
            </div>
        </div>
    }
</article>

<script type="text/javascript">
    $(function () {
        var editor = CKEDITOR.replace('Description',
          {
              height: 260,
              toolbar: 'Basic',
              filebrowserImageUploadUrl: "@Url.Action("UploadEditer", "Upload")"
          });

        editor.on("change", pasteImg);

        $("#sel_parCategory").change(function () {
            $("#ParCategory").val($(this).val());
            $.ajax({
                url: "@Url.Action("GetCategorysById")",
                type: "Get",
                data: { "parentId": $("#ParCategory").val(), "searchType": 1 },
                dataType: "json",
                success: function (data) {
                    var stringBuild = new StringBuffer();
                    $.each(data, function (i, v) {
                        stringBuild.append("<option value='" + v.Key + "'>" + v.Value + "</option>");
                    });

                    $("#sel_exCategory").empty().append("<option value=''>所属类别</option>").append(stringBuild.toString());
                    $("#sel_exCategory").change();
                }
            })
        });

        $("#sel_exCategory,#sel_category").on("change", function () {
            $("#Category").val($(this).val()).blur();
        });
    });

    function bindData() {
        if ($("#sel_section").val() == '@((int)SectionType.Examination)') {
            $("#sel_parCategory,#sel_exCategory").removeClass("hidden");
            $("#sel_category").addClass("hidden");
            $("#sel_parCategory").val(0).change();

        } else {
            $("#sel_parCategory,#sel_exCategory").addClass("hidden");
            $("#sel_category").removeClass("hidden");
            $.ajax({
                url: "@Url.Action("GetCategorysBySection")",
                type: "Get",
                data: { "sectionType": $("#sel_section").val(), "searchType": 1 },
                dataType: "json",
                success: function (data) {
                    var stringBuild = new StringBuffer();
                    $.each(data, function (i, v) {
                        stringBuild.append("<option value='" + v.Key + "'>" + v.Value + "</option>");
                    });

                    $("#sel_category").empty().append("<option value=''>所属类别</option>").append(stringBuild.toString());
                    $("#sel_category").change();
                }
            })
        }
    }

    function formSuccess(result) {
        if (result != null) {
            if (result.isSuccess) {
                top.layer.alert('操作成功！', {
                    icon: 6, closeBtn: 0, yes: function () {
                        window.location = '@Url.Action("List", "Article")'
                        parent.layer.closeAll();
                    }
                });
            } else {
                top.layer.alert('操作失败！', { icon: 5 });
            }
        } else {
            top.layer.alert('操作失败！', { icon: 5 });
        }
    }
</script>

<script type="text/javascript">
    var maxcount = 8;
    //上传参数
    var jq_imgFormData = { BidFileDomain: ' ', uploadQueryData: { Suffix: 1 } };
    if (!WebUploader.Uploader.support()) {
        $(".FJsp2").html("说明：当前浏览器不支持附件上传");
        $("#upfileImg").hide();
        //alert( 'Web Uploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器');
        alert("当前浏览器不支持附件上传，如果你使用的是IE浏览器，请尝试升级 flash 播放器");
        throw new Error('WebUploader does not support the browser you are using.');
    }
    var BASE_URL = "/content/webuploader-0.1.5";
    var file_ids = []; //已上传文件的路径
    var file_info = []; //记录文件的GUID和存储路径
    var isfilesuping = false;
    // 文件上传
    jQuery(function () {
        var id = "upfileImg";
        var $ = jQuery,
    state = 'pending',
    $probar = $("#" + id).siblings("div").find(".pros"),
    uploader;
        uploader = WebUploader.create({
            // 不压缩image
            resize: false,
            //发送后台时参数
            formData: jq_imgFormData.uploadQueryData,
            fileVal: jq_imgFormData.BidFileDomain,
            method: "POST",
            //是否分块（大文件上传）
            chunked: true,
            //设置文件上传域名称
            fileVal: 'file',
            //每块最大限制（默认5M 因为是.net 所以设置2M）
            chunkSize: 2097152,
            // swf文件路径
            swf: BASE_URL + '/Uploader.swf',
            // 文件接收服务端。
            server: jq_imgFormData.BidFileDomain + '@Url.Action("Upload", "Upload")',
            //创建选择文件按钮
            pick: { id: "#" + id, innerHTML: "", multiple: false },
            //选择文件自动上传
            auto: true,
            //accept:{title:"只能上传rar,zip文件",extensions :'rar,zip',mimeTypes:'application/x-zip-compressed'},
            fileNumLimit: maxcount
        });

        //文件大小限制,超过则不加入队列
        uploader.on('beforeFileQueued', function (file, han, msg) {
            var xzlist = ("jpg,jpeg,gif,bmp,png").split(",");
            var filenamelist = file.name.split('.');
            var filehz = filenamelist[filenamelist.length - 1];

            if (xzlist.indexOf(filehz) < 0) {
                layer.alert("请上传指定类型格式的文件", 0);
                return false;
            }

            if (file.size > (1024 * 1024 * 10)) {
                layer.alert("图片大小不可超过5M", 0);
                return false;
            }

            var filelen = $("#imglist>li").length;
            if (filelen >= maxcount) {
                layer.alert("超出最大上传数量", 0);
                return false;
            }
        });
        //某个文件开始上传前触发，一个文件只会触发一次。
        uploader.on('uploadStart', function (file) {
            uploader.options.formData.guid = WebUploader.Base.guid();
        });
        // 当有文件添加进来的时候
        uploader.on('fileQueued', function (file) {
            $(".help-img").hide();
            $(".yangli").hide()
            $(".yulan").show();
            uploader.makeThumb(file, function (error, ret) {
                var file_list = [];
                file_list.push("<li id='" + file.id + "'>");
                file_list.push("<img src='" + ret + "'/>");
                file_list.push("<div class='percent_small'>");
                file_list.push("<div class='per_pic2'>");
                file_list.push("<div class='change_per2' style='width:1%'></div>");
                file_list.push("</div>");
                file_list.push("<span class='showtitle'>正准备上传…</span></div>");
                file_list.push("</div></li>");
                $("#imglist").empty().append(file_list.join(''));
            });
        });
        //重置
        uploader.on('reset', function (file) {

        });
        // 文件上传过程中创建进度条实时显示。
        uploader.on('uploadProgress', function (file, percentage) {
            var jd = parseInt(percentage * 100);
            if (jd > 1) {
                $("#" + file.id).find(".change_per2").css("width", jd + '%');
                $("#" + file.id).find(".per_pic2,.showtitle").attr("title", '已上传' + jd + '%');
                $("#" + file.id).find(".showtitle").text('已上传' + jd + '%');
            }
            if (jd >= 100) {
                $("#" + file.id).find(".per_pic2,.showtitle").attr("title", "处理中...");
            }
            isfilesuping = uploader.getStats().progressNum != 0;
        });

        uploader.on('uploadSuccess', function (file, obj) {

            isfilesuping = uploader.getStats().progressNum != 0;
            var jsonresult = obj._raw;
            jsonresult = eval('(' + jsonresult + ')');
            if (jsonresult.FilePath) {
                $("#" + file.id).find(".showtitle").text("");
                $("#memberFileImg,#loc_temp_img").val(jsonresult.FilePath);
                $("#memberFileImg").blur();
                $("#" + file.id).find("span.title").html(jsonresult.FileName);
                $("#upfileImg").find("div.webuploader-pick").html("更改图片");
                $("#upfileImg").parent().attr("style", "position:relative");//
                $("#upfileImg").addClass("up-imgBtn");
            }
            else {
                layer.msg(jsonresult.Message);
            }

            uploader.reset();
        });

        uploader.on('uploadError', function (file, reason) {
            layer.msg(reason);
        });
        uploader.on('error', function (handler) {
            if (handler == "Q_EXCEED_NUM_LIMIT") {
                layer.alert("超出最大张数");
            }
            if (handler == "F_DUPLICATE") {
                layer.alert("该文件已在上传列表", 3);
            }

            if (handler == "Q_TYPE_DENIED") {
                layer.alert("该文件不满足上传要求，可能您上传的文件为0KB");
            }
        });
        uploader.on('uploadComplete', function (file) {
            $('#' + file.id).find('.percent_small').fadeOut();
        });

    });

</script>